package graficas;

import org.jfree.chart.ChartPanel;

import java.util.HashMap;
import java.util.Set;

import org.jfree.chart.ChartFactory;
import org.jfree.chart.JFreeChart;
import org.jfree.ui.ApplicationFrame;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.DefaultCategoryDataset;

public class LineChart_AWT extends ApplicationFrame {

	/**
	 * AutoGenerated
	 */
	private static final long serialVersionUID = -4243183311610374674L;
	
	DefaultCategoryDataset dataset = new DefaultCategoryDataset();

	public LineChart_AWT(String applicationTitle, String chartTitle, HashMap<Integer, Long> valores, boolean nuevo) {
		super(applicationTitle);
		JFreeChart lineChart = ChartFactory.createLineChart(chartTitle, "Nodos", "T(ns)", createDataset(valores, dataset),
				PlotOrientation.VERTICAL, true, true, false);

		ChartPanel chartPanel = new ChartPanel(lineChart);
		chartPanel.setPreferredSize(new java.awt.Dimension(560, 367));
		setContentPane(chartPanel);
	}

	private DefaultCategoryDataset createDataset(HashMap<Integer, Long> valores, DefaultCategoryDataset dataset) {
		Set<Integer> nodos = valores.keySet();
		for (Integer integer : nodos) {
			switch (Main.GRAFICA) {
			case "Putil":
				dataset.addValue(valores.get(integer), "Porcentaje Ejecución Útil", integer);
				break;
			case "Tsincro":
				dataset.addValue(valores.get(integer), "tiempo de sincronización", integer);
				break;
			case "Tejecucion":
				dataset.addValue(valores.get(integer), "Tiempo de ejecución", integer);
				break;
			case "Ttotal":
				dataset.addValue(valores.get(integer), "Tiempo total", integer);
				break;

			default:
				break;
			}
		}
		return dataset;
	}
}
